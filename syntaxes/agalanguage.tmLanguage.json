{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Lenguaje Aga",
	"patterns": [
		{"include": "#keywords"},
		{"include": "#strings"},
		{"include": "#supports"},
		{"include": "#variables"},
		{"include": "#constants"}
	],
	"repository": {
		"constants": {
			"patterns": [
				{
					"name": "constant.language.agalanguage",
					"match": "\\b(cierto|falso|nulo|typoDe|instanciaDe)\\b"
				},
				{
					"name": "constant.numeric.agalanguage",
					"match": "\\b([0-9]+\\$[0-9]+(?:\\.[0-9]+)?)\\b"
				},
				{
					"name": "constant.numeric.agalanguage",
					"match": "\\b([0-9]|[1-2][0-9]|3[0-6]|[0-1])\\$[0-9a-zA-Z]+\\b"
				},
				{
					"name": "constant.numeric.agalanguage",
					"match": "\\b([0-9]+(?:\\.[0-9]+)?)\\b"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.agalanguage",
					"match": "\\b(si|entonces|mien|ret|intentar|capturar|lanzar|finalmente|cont|rom|importar|como|con|exportar)\\b"
				},
				{
					"name": "keyword.other",
					"match": "\\b(fn|clase|constructor|extiende|est|def|const)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.agalanguage",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.agalanguage",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.agalanguage",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.agalanguage",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"supports":{
			"patterns": [
				{
					"name": "support.function.agalanguage",
					"match": "\\b([a-z_$][a-zA-Z0-9_$]*)\\b\\s*\\("
				},
				{
					"name": "support.class.agalanguage",
					"match": "\\b([A-Z][a-zA-Z0-9_$]*)\\b"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.language",
					"match": "\\b(este|super)\\b"
				},
				{
					"name": "variable.name.agalanguage",
					"match": "\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\b"
				}
			]
		}
	},
	"scopeName": "source.agal"
}
